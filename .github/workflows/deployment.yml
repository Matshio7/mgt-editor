name: Kubernetes Deployment

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: derpierre65/mgt-editor:latest
  DOCKER_IMAGE_CACHE: derpierre65/mgt-editor:buildcache

jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # Get short SHA hash
      - name: 🏗 Generate short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

      # Checkout repository and setup node
      - name: 🛎 Checkout
        uses: actions/checkout@master

      - name: 🏗 Setup node env
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 16
          check-latest: true

      # Caching
      - name: 📦 Cache node_modules
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install required dependencies
      - name: 👨🏻‍💻 NPM - Install dependencies
        run: npm ci --prefer-offline --no-audit

      # build app and move dist directory
      - name: 🏗 Building app
        run: npm run build

      # Setup Docker
      - name: Docker - Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker - Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push the docker image
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_CACHE }}
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_CACHE }},mode=max

      # Replace git commit hash in k8s files
      - name: Replace Commit Hash
        run: sed -i 's/CICD_GIT_COMMIT/${{ steps.slug.outputs.sha8 }}/g' .k8s/app.yml

      # Apply Kubectl
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f .k8s/app.yml